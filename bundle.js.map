{"version":3,"sources":["webpack:///webpack/bootstrap caf1f12b71ab0cf7b298","webpack:///./paintover.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;AACA;;AAEA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAmB,cAAc;AACjC,wBAAuB,cAAc;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,cAAc;AACjC,sBAAqB,cAAc;AACnC;AACA;AACA;AACA;AACA;AACA,oBAAmB,cAAc;AACjC,sBAAqB,cAAc;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,IAAG;AACH;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAmB,cAAc;AACjC;AACA,sBAAqB,cAAc;AACnC;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA,oBAAmB,cAAc;AACjC;AACA,sBAAqB,cAAc;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA,EAAC","file":"./bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap caf1f12b71ab0cf7b298","let gameBoard;\nlet n_rows;\nlet n_cols;\n\nconst colors = \"red blue green purple yellow orange\".split(/\\s+/);\n\n\n// DOM functions\n\nfunction createNode (type, parent) {\n  const newNode = document.createElement(type);\n  parent.appendChild (newNode);\n  return newNode;\n}\n\nfunction getById (id) {\n  const element = document.getElementById(id);\n  return element;\n}\n\nfunction clear (element) {\n  while (element.lastChild) {\n    element.removeChild (element.lastChild);\n  }\n}\n\nfunction updateMoves(parent, text)\n{\n    const textNode = document.createTextNode(text);\n    clear(parent);\n    parent.appendChild(textNode);\n}\n\n// Game logic\n\nlet moves;\nlet maxMoves = 25;\nlet filled;\n\n\nfunction randomColor() {\n  num = Math.floor( Math.random() * 6 );\n  return colors[num];\n}\n\nfunction paintElement(row, col, color) {\n  gameBoard[row][col].color = color;\n  gameBoard[row][col].element.className = \"square \" + color;\n}\n\nfunction testColorFlood (row, col, color) {\n  if (gameBoard[row][col].painted){\n    return;\n  }\n  if (gameBoard[row][col].color === color) {\n    gameBoard[row][col].painted = true;\n    paintNeighbors(row, col, color);\n  }\n}\n\nfunction paintNeighbors(row, col, color){\n  if (row < n_rows - 1)\n      testColorFlood (row + 1, col, color);\n  if (row > 0)\n      testColorFlood (row - 1, col, color);\n  if (col < n_cols - 1)\n      testColorFlood (row, col + 1, color);\n  if (col > 0)\n      testColorFlood (row, col - 1, color);\n}\n\nfunction allPainted ()\n{\n  for (let row = 0; row < n_rows; row++) {\n      for (let col = 0; col < n_cols; col++) {\n          if (!gameBoard[row][col].painted) {\n              return false;\n          }\n      }\n  }\n  return true;\n}\n\nfunction paint (color, initial)\n{\n  if(filled){\n    return;\n  }\n  const prev_color = gameBoard[0][0].color;\n  if (!initial && color == prev_color)\n      return;\n  moves++;\n  updateMoves(document.getElementById(\"moves\"), moves);\n  for (let row = 0; row < n_rows; row++) {\n    for (let col = 0; col < n_cols; col++) {\n      if (gameBoard[row][col].painted) {\n        paintElement (row, col, color);\n      }\n    }\n  }\n  for (let row = 0; row < n_rows; row++) {\n    for (let col = 0; col < n_cols; col++) {\n      if (gameBoard[row][col].painted) {\n        paintNeighbors (row, col, color);\n      }\n    }\n  }\n  if(allPainted()){\n    filled = true;\n    if(moves <= maxMoves){\n      alert (\"Congratulations, you win!\");\n    } else {\n      alert (\"You finished... but you still lost\");\n    }\n  } else if(moves === maxMoves){\n    alert (\"You've Lost. Better luck next time\");\n  }\n\n}\n\nfunction paintCallback(e) {\n  paint(e.currentTarget.className.split(\" \").slice(1)[0]);\n}\n\nfunction createGameBoard(size) {\n  n_rows = size;\n  n_cols = size;\n  maxMoves = Math.round(1.77 * size);\n  gameBoard = new Array (n_rows);\n  for (let row = 0; row < n_rows; row++) {\n    gameBoard[row] = new Array (n_cols);\n    for (let col = 0; col < n_cols; col++){\n      gameBoard[row][col] = {};\n    }\n  }\n\n}\n\n\nfunction createBoard (size) {\n  createGameBoard(size);\n  moves = -1;\n  filled = false;\n  const board = getById(\"gameBoard\");\n  for (let row = 0; row < n_rows; row++) {\n    const tr = createNode(\"tr\", board);\n    for (let col = 0; col < n_cols; col++) {\n      const td = createNode(\"td\", tr);\n      td.addEventListener(\"click\", paintCallback);\n      color = randomColor();\n      td.className = \"square \" + color;\n      gameBoard[row][col].color = color;\n      gameBoard[row][col].element = td;\n      gameBoard[row][col].painted = false;\n    }\n  }\n  gameBoard[0][0].painted = true;\n  paint(gameBoard[0][0].color, true);\n  updateMoves(document.getElementById(\"moves\"), moves);\n  updateMoves(document.getElementById(\"maxMoves\"), maxMoves);\n}\n\nfunction newGame() {\n  size = parseInt(document.getElementById(\"board-size\").value);\n  const board = getById(\"gameBoard\");\n  clear(board);\n  createBoard(size);\n}\n\nfunction updateBoard() {\n  size = parseInt(document.getElementById(\"board-size\").value);\n  newGame(size);\n}\n\n\n\ndocument.addEventListener(\"DOMContentLoaded\", function(){\n  window.newGame = newGame;\n  window.updateBoard = updateBoard;\n  updateBoard(14);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./paintover.js\n// module id = 0\n// module chunks = 0"],"sourceRoot":""}